["\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 _LightSplitsNear;\nuniform \tvec4 _LightSplitsFar;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tvec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbvec4 u_xlatb1;\nvec4 u_xlat2;\nbvec4 u_xlatb2;\nvec3 u_xlat3;\nfloat u_xlat4;\nfloat u_xlat8;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat4 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat4 = float(1.0) / u_xlat4;\n    u_xlat8 = (-u_xlat4) + u_xlat0.x;\n    u_xlat4 = unity_OrthoParams.w * u_xlat8 + u_xlat4;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat4) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat4) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlatb1 = greaterThanEqual(u_xlat0.zzzz, _LightSplitsNear);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlatb2 = lessThan(u_xlat0.zzzz, _LightSplitsFar);\n    u_xlat2.x = u_xlatb2.x ? float(1.0) : 0.0;\n    u_xlat2.y = u_xlatb2.y ? float(1.0) : 0.0;\n    u_xlat2.z = u_xlatb2.z ? float(1.0) : 0.0;\n    u_xlat2.w = u_xlatb2.w ? float(1.0) : 0.0;\n;\n    u_xlat16_1 = u_xlat1 * u_xlat2;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat16_1.yyy * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.xxx + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.zzz + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.www + u_xlat2.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat4 = (-_LightShadowData.x) + 1.0;\n    u_xlat0.x = (u_xlatb0) ? 0.0 : u_xlat4;\n    u_xlat0 = u_xlat0.xxxx + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 _LightSplitsNear;\nuniform \tvec4 _LightSplitsFar;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tvec4 _LightShadowData;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbvec4 u_xlatb1;\nvec4 u_xlat2;\nbvec4 u_xlatb2;\nvec3 u_xlat3;\nfloat u_xlat4;\nfloat u_xlat8;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat4 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat4 = float(1.0) / u_xlat4;\n    u_xlat8 = (-u_xlat4) + u_xlat0.x;\n    u_xlat4 = unity_OrthoParams.w * u_xlat8 + u_xlat4;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat4) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat4) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlatb1 = greaterThanEqual(u_xlat0.zzzz, _LightSplitsNear);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlatb2 = lessThan(u_xlat0.zzzz, _LightSplitsFar);\n    u_xlat2.x = u_xlatb2.x ? float(1.0) : 0.0;\n    u_xlat2.y = u_xlatb2.y ? float(1.0) : 0.0;\n    u_xlat2.z = u_xlatb2.z ? float(1.0) : 0.0;\n    u_xlat2.w = u_xlatb2.w ? float(1.0) : 0.0;\n;\n    u_xlat16_1 = u_xlat1 * u_xlat2;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat2 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat16_1.yyy * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.xxx + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat3.xyz;\n    u_xlat2.xyz = u_xlat3.xyz * u_xlat16_1.zzz + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat3.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.www + u_xlat2.xyz;\n    vec3 txVec0 = vec3(u_xlat0.xy,u_xlat0.z);\n    u_xlat0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    u_xlat4 = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = u_xlat0.xxxx * vec4(u_xlat4) + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 unity_ShadowSplitSpheres[4];\nuniform \tvec4 unity_ShadowSplitSqRadii;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tvec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nbvec4 u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nvec3 u_xlat5;\nfloat u_xlat8;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat4 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat4 = float(1.0) / u_xlat4;\n    u_xlat8 = (-u_xlat4) + u_xlat0.x;\n    u_xlat4 = unity_OrthoParams.w * u_xlat8 + u_xlat4;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat4) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat4) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[0].xyz);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[1].xyz);\n    u_xlat1.y = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[2].xyz);\n    u_xlat1.z = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[3].xyz);\n    u_xlat1.w = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlatb1 = lessThan(u_xlat1, unity_ShadowSplitSqRadii);\n    u_xlat16_3.x = (u_xlatb1.x) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.y = (u_xlatb1.y) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.z = (u_xlatb1.z) ? float(-1.0) : float(-0.0);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat1.yzw;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat5.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat16_3.xxx * u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat1.xxx + u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat16_3.yyy + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.zzz + u_xlat1.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat4 = (-_LightShadowData.x) + 1.0;\n    u_xlat0.x = (u_xlatb0) ? 0.0 : u_xlat4;\n    u_xlat0 = u_xlat0.xxxx + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 unity_ShadowSplitSpheres[4];\nuniform \tvec4 unity_ShadowSplitSqRadii;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tvec4 _LightShadowData;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbvec4 u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nvec3 u_xlat5;\nfloat u_xlat8;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat4 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat4 = float(1.0) / u_xlat4;\n    u_xlat8 = (-u_xlat4) + u_xlat0.x;\n    u_xlat4 = unity_OrthoParams.w * u_xlat8 + u_xlat4;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat4) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat4) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[0].xyz);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[1].xyz);\n    u_xlat1.y = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[2].xyz);\n    u_xlat1.z = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat0.xyz + (-unity_ShadowSplitSpheres[3].xyz);\n    u_xlat1.w = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlatb1 = lessThan(u_xlat1, unity_ShadowSplitSqRadii);\n    u_xlat16_3.x = (u_xlatb1.x) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.y = (u_xlatb1.y) ? float(-1.0) : float(-0.0);\n    u_xlat16_3.z = (u_xlatb1.z) ? float(-1.0) : float(-0.0);\n    u_xlat1.x = u_xlatb1.x ? float(1.0) : 0.0;\n    u_xlat1.y = u_xlatb1.y ? float(1.0) : 0.0;\n    u_xlat1.z = u_xlatb1.z ? float(1.0) : 0.0;\n    u_xlat1.w = u_xlatb1.w ? float(1.0) : 0.0;\n;\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat1.yzw;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat5.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[5].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[4].xyz * u_xlat0.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[6].xyz * u_xlat0.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[7].xyz * u_xlat0.www + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat16_3.xxx * u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat1.xxx + u_xlat5.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[9].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[8].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[10].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[11].xyz * u_xlat0.www + u_xlat2.xyz;\n    u_xlat1.xyz = u_xlat2.xyz * u_xlat16_3.yyy + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[13].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToShadow[12].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[14].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[15].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.zzz + u_xlat1.xyz;\n    vec3 txVec0 = vec3(u_xlat0.xy,u_xlat0.z);\n    u_xlat0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    u_xlat4 = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = u_xlat0.xxxx * vec4(u_xlat4) + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tvec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat2;\nfloat u_xlat4;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat2 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat2 = float(1.0) / u_xlat2;\n    u_xlat4 = (-u_xlat2) + u_xlat0.x;\n    u_xlat2 = unity_OrthoParams.w * u_xlat4 + u_xlat2;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat2) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat2) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat2 = (-_LightShadowData.x) + 1.0;\n    u_xlat0.x = (u_xlatb0) ? 0.0 : u_xlat2;\n    u_xlat0 = u_xlat0.xxxx + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tvec4 _LightShadowData;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nfloat u_xlat4;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat2 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat2 = float(1.0) / u_xlat2;\n    u_xlat4 = (-u_xlat2) + u_xlat0.x;\n    u_xlat2 = unity_OrthoParams.w * u_xlat4 + u_xlat2;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat2) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat2) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vec3 txVec0 = vec3(u_xlat0.xy,u_xlat0.z);\n    u_xlat0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    u_xlat2 = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = u_xlat0.xxxx * vec4(u_xlat2) + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec3 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tvec4 _LightShadowData;\nuniform highp sampler2D _CameraDepthTexture;\nuniform highp sampler2D _ShadowMapTexture;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat2;\nfloat u_xlat4;\nvoid main()\n{\n    u_xlat0.x = texture2D(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat2 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat2 = float(1.0) / u_xlat2;\n    u_xlat4 = (-u_xlat2) + u_xlat0.x;\n    u_xlat2 = unity_OrthoParams.w * u_xlat4 + u_xlat2;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat2) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat2) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat2 = (-_LightShadowData.x) + 1.0;\n    u_xlat0.x = (u_xlatb0) ? 0.0 : u_xlat2;\n    u_xlat0 = u_xlat0.xxxx + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraInvProjection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec3 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_CameraInvProjection[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_CameraInvProjection[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD0.zw = u_xlat1.zz + u_xlat1.xw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1.xyz = in_TEXCOORD1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-hlslcc_mtx4x4unity_CameraInvProjection[2].xyz);\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[2].xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.xyz = u_xlat1.xyz + hlslcc_mtx4x4unity_CameraInvProjection[3].xyz;\n    u_xlat1.w = (-u_xlat1.z);\n    vs_TEXCOORD2.xyz = u_xlat1.xyw;\n    u_xlat0.w = (-u_xlat0.z);\n    vs_TEXCOORD3.xyz = u_xlat0.xyw;\n    return;\n}\n\n","\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tvec4 hlslcc_mtx4x4unity_CameraToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tvec4 _LightShadowData;\nUNITY_LOCATION(0) uniform highp sampler2D _CameraDepthTexture;\nUNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;\nUNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nfloat u_xlat4;\nvoid main()\n{\n    u_xlat0.x = texture(_CameraDepthTexture, vs_TEXCOORD0.xy).x;\n    u_xlat2 = _ZBufferParams.x * u_xlat0.x + _ZBufferParams.y;\n    u_xlat2 = float(1.0) / u_xlat2;\n    u_xlat4 = (-u_xlat2) + u_xlat0.x;\n    u_xlat2 = unity_OrthoParams.w * u_xlat4 + u_xlat2;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;\n    u_xlat0.xzw = u_xlat0.xxx * u_xlat1.xyz + vs_TEXCOORD2.xyz;\n    u_xlat0.xzw = (-vs_TEXCOORD1.xyz) * vec3(u_xlat2) + u_xlat0.xzw;\n    u_xlat1.xyz = vec3(u_xlat2) * vs_TEXCOORD1.xyz;\n    u_xlat0.xyz = unity_OrthoParams.www * u_xlat0.xzw + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_CameraToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_CameraToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_CameraToWorld[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_CameraToWorld[3];\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToShadow[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vec3 txVec0 = vec3(u_xlat0.xy,u_xlat0.z);\n    u_xlat0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);\n    u_xlat2 = (-_LightShadowData.x) + 1.0;\n    u_xlat0 = u_xlat0.xxxx * vec4(u_xlat2) + _LightShadowData.xxxx;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"]